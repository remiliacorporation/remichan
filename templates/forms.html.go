// Code generated by qtc from "forms.html". DO NOT EDIT.
// See https://github.com/valyala/quicktemplate for details.

//line forms.html:1
package templates

//line forms.html:1
import "github.com/bakape/meguca/config"

//line forms.html:2
import "github.com/bakape/meguca/lang"

// OwnedBoard renders a form for selecting one of several boards owned by the user

//line forms.html:5
import (
	qtio422016 "io"

	qt422016 "github.com/valyala/quicktemplate"
)

//line forms.html:5
var (
	_ = qtio422016.Copy
	_ = qt422016.AcquireByteBuffer
)

//line forms.html:5
func StreamOwnedBoard(qw422016 *qt422016.Writer, boards config.BoardTitles) {
//line forms.html:6
	if len(boards) != 0 {
//line forms.html:6
		qw422016.N().S(`<select name="boards" required>`)
//line forms.html:8
		for _, b := range boards {
//line forms.html:8
			qw422016.N().S(`<option value="`)
//line forms.html:9
			qw422016.N().S(b.ID)
//line forms.html:9
			qw422016.N().S(`">`)
//line forms.html:10
			streamformatTitle(qw422016, b.ID, b.Title)
//line forms.html:10
			qw422016.N().S(`</option>`)
//line forms.html:12
		}
//line forms.html:12
		qw422016.N().S(`</select><br>`)
//line forms.html:15
		streamsubmit(qw422016, true)
//line forms.html:16
	} else {
//line forms.html:17
		qw422016.N().S(lang.Get().UI["ownNoBoards"])
//line forms.html:17
		qw422016.N().S(`<br><br>`)
//line forms.html:20
		streamcancel(qw422016)
//line forms.html:20
		qw422016.N().S(`<div class="form-response admin"></div>`)
//line forms.html:22
	}
//line forms.html:23
}

//line forms.html:23
func WriteOwnedBoard(qq422016 qtio422016.Writer, boards config.BoardTitles) {
//line forms.html:23
	qw422016 := qt422016.AcquireWriter(qq422016)
//line forms.html:23
	StreamOwnedBoard(qw422016, boards)
//line forms.html:23
	qt422016.ReleaseWriter(qw422016)
//line forms.html:23
}

//line forms.html:23
func OwnedBoard(boards config.BoardTitles) string {
//line forms.html:23
	qb422016 := qt422016.AcquireByteBuffer()
//line forms.html:23
	WriteOwnedBoard(qb422016, boards)
//line forms.html:23
	qs422016 := string(qb422016.B)
//line forms.html:23
	qt422016.ReleaseByteBuffer(qb422016)
//line forms.html:23
	return qs422016
//line forms.html:23
}

//line forms.html:25
func streamformatTitle(qw422016 *qt422016.Writer, id, title string) {
//line forms.html:25
	qw422016.N().S(`/`)
//line forms.html:26
	qw422016.N().S(id)
//line forms.html:26
	qw422016.N().S(`/`)
//line forms.html:26
	qw422016.N().S(` `)
//line forms.html:26
	qw422016.N().S(`-`)
//line forms.html:26
	qw422016.N().S(` `)
//line forms.html:26
	qw422016.E().S(title)
//line forms.html:27
}

//line forms.html:27
func writeformatTitle(qq422016 qtio422016.Writer, id, title string) {
//line forms.html:27
	qw422016 := qt422016.AcquireWriter(qq422016)
//line forms.html:27
	streamformatTitle(qw422016, id, title)
//line forms.html:27
	qt422016.ReleaseWriter(qw422016)
//line forms.html:27
}

//line forms.html:27
func formatTitle(id, title string) string {
//line forms.html:27
	qb422016 := qt422016.AcquireByteBuffer()
//line forms.html:27
	writeformatTitle(qb422016, id, title)
//line forms.html:27
	qs422016 := string(qb422016.B)
//line forms.html:27
	qt422016.ReleaseByteBuffer(qb422016)
//line forms.html:27
	return qs422016
//line forms.html:27
}

// BoardNavigation renders a board selection and search form

//line forms.html:30
func StreamBoardNavigation(qw422016 *qt422016.Writer) {
//line forms.html:31
	ln := lang.Get().Common.UI

//line forms.html:31
	qw422016.N().S(`<input type="text" class="full-width" name="search" placeholder="`)
//line forms.html:32
	qw422016.N().S(ln["search"])
//line forms.html:32
	qw422016.N().S(`"><br><form><span class="flex">`)
//line forms.html:36
	streamsubmit(qw422016, true)
//line forms.html:36
	qw422016.N().S(`<label><input type="checkbox" name="pointToCatalog">`)
//line forms.html:39
	qw422016.N().S(ln["pointToCatalog"])
//line forms.html:39
	qw422016.N().S(`</label></span><div class="board-list">`)
//line forms.html:43
	for _, b := range config.GetBoardTitles() {
//line forms.html:43
		qw422016.N().S(`<label class="board"><input type="checkbox" name="`)
//line forms.html:45
		qw422016.N().S(b.ID)
//line forms.html:45
		qw422016.N().S(`"><a href="/`)
//line forms.html:46
		qw422016.N().S(b.ID)
//line forms.html:46
		qw422016.N().S(`/">`)
//line forms.html:47
		streamformatTitle(qw422016, b.ID, b.Title)
//line forms.html:47
		qw422016.N().S(`</a><br></label>`)
//line forms.html:51
	}
//line forms.html:51
	qw422016.N().S(`</div></form>`)
//line forms.html:54
}

//line forms.html:54
func WriteBoardNavigation(qq422016 qtio422016.Writer) {
//line forms.html:54
	qw422016 := qt422016.AcquireWriter(qq422016)
//line forms.html:54
	StreamBoardNavigation(qw422016)
//line forms.html:54
	qt422016.ReleaseWriter(qw422016)
//line forms.html:54
}

//line forms.html:54
func BoardNavigation() string {
//line forms.html:54
	qb422016 := qt422016.AcquireByteBuffer()
//line forms.html:54
	WriteBoardNavigation(qb422016)
//line forms.html:54
	qs422016 := string(qb422016.B)
//line forms.html:54
	qt422016.ReleaseByteBuffer(qb422016)
//line forms.html:54
	return qs422016
//line forms.html:54
}

// CreateBoard renders a the form for creating new boards

//line forms.html:57
func StreamCreateBoard(qw422016 *qt422016.Writer) {
//line forms.html:58
	streamtable(qw422016, specs["createBoard"])
//line forms.html:59
	StreamCaptchaConfirmation(qw422016)
//line forms.html:60
}

//line forms.html:60
func WriteCreateBoard(qq422016 qtio422016.Writer) {
//line forms.html:60
	qw422016 := qt422016.AcquireWriter(qq422016)
//line forms.html:60
	StreamCreateBoard(qw422016)
//line forms.html:60
	qt422016.ReleaseWriter(qw422016)
//line forms.html:60
}

//line forms.html:60
func CreateBoard() string {
//line forms.html:60
	qb422016 := qt422016.AcquireByteBuffer()
//line forms.html:60
	WriteCreateBoard(qb422016)
//line forms.html:60
	qs422016 := string(qb422016.B)
//line forms.html:60
	qt422016.ReleaseByteBuffer(qb422016)
//line forms.html:60
	return qs422016
//line forms.html:60
}

// CaptchaConfirmation renders a confirmation form with an optional captcha

//line forms.html:63
func StreamCaptchaConfirmation(qw422016 *qt422016.Writer) {
//line forms.html:64
	streamcaptcha(qw422016, "all")
//line forms.html:65
	streamsubmit(qw422016, true)
//line forms.html:66
}

//line forms.html:66
func WriteCaptchaConfirmation(qq422016 qtio422016.Writer) {
//line forms.html:66
	qw422016 := qt422016.AcquireWriter(qq422016)
//line forms.html:66
	StreamCaptchaConfirmation(qw422016)
//line forms.html:66
	qt422016.ReleaseWriter(qw422016)
//line forms.html:66
}

//line forms.html:66
func CaptchaConfirmation() string {
//line forms.html:66
	qb422016 := qt422016.AcquireByteBuffer()
//line forms.html:66
	WriteCaptchaConfirmation(qb422016)
//line forms.html:66
	qs422016 := string(qb422016.B)
//line forms.html:66
	qt422016.ReleaseByteBuffer(qb422016)
//line forms.html:66
	return qs422016
//line forms.html:66
}

//line forms.html:68
func streamcaptcha(qw422016 *qt422016.Writer, board string) {
//line forms.html:69
	if !config.Get().Captcha {
//line forms.html:70
		return
//line forms.html:71
	}
//line forms.html:71
	qw422016.N().S(`<div class="captcha-container full-width"><noscript><iframe width="462" height="525" scrolling="no" marginwidth="0" marginheight="0" src="/api/captcha/`)
//line forms.html:74
	qw422016.N().S(board)
//line forms.html:74
	qw422016.N().S(`"></iframe></noscript></div>`)
//line forms.html:77
}

//line forms.html:77
func writecaptcha(qq422016 qtio422016.Writer, board string) {
//line forms.html:77
	qw422016 := qt422016.AcquireWriter(qq422016)
//line forms.html:77
	streamcaptcha(qw422016, board)
//line forms.html:77
	qt422016.ReleaseWriter(qw422016)
//line forms.html:77
}

//line forms.html:77
func captcha(board string) string {
//line forms.html:77
	qb422016 := qt422016.AcquireByteBuffer()
//line forms.html:77
	writecaptcha(qb422016, board)
//line forms.html:77
	qs422016 := string(qb422016.B)
//line forms.html:77
	qt422016.ReleaseByteBuffer(qb422016)
//line forms.html:77
	return qs422016
//line forms.html:77
}

// Form for inputting key-value map-like data

//line forms.html:80
func streamkeyValueForm(qw422016 *qt422016.Writer, k, v string) {
//line forms.html:80
	qw422016.N().S(`<span><input type="text" class="map-field" value="`)
//line forms.html:82
	qw422016.E().S(k)
//line forms.html:82
	qw422016.N().S(`"><input type="text" class="map-field" value="`)
//line forms.html:83
	qw422016.E().S(v)
//line forms.html:83
	qw422016.N().S(`"><a class="map-remove">[X]</a><br></span>`)
//line forms.html:89
}

//line forms.html:89
func writekeyValueForm(qq422016 qtio422016.Writer, k, v string) {
//line forms.html:89
	qw422016 := qt422016.AcquireWriter(qq422016)
//line forms.html:89
	streamkeyValueForm(qw422016, k, v)
//line forms.html:89
	qt422016.ReleaseWriter(qw422016)
//line forms.html:89
}

//line forms.html:89
func keyValueForm(k, v string) string {
//line forms.html:89
	qb422016 := qt422016.AcquireByteBuffer()
//line forms.html:89
	writekeyValueForm(qb422016, k, v)
//line forms.html:89
	qs422016 := string(qb422016.B)
//line forms.html:89
	qt422016.ReleaseByteBuffer(qb422016)
//line forms.html:89
	return qs422016
//line forms.html:89
}

// Form for inputting one array-like form item

//line forms.html:92
func streamarrayItemForm(qw422016 *qt422016.Writer, v string) {
//line forms.html:92
	qw422016.N().S(`<span><input type="text" class="array-field" value="`)
//line forms.html:94
	qw422016.E().S(v)
//line forms.html:94
	qw422016.N().S(`"><a class="array-remove">[X]</a><br></span>`)
//line forms.html:100
}

//line forms.html:100
func writearrayItemForm(qq422016 qtio422016.Writer, v string) {
//line forms.html:100
	qw422016 := qt422016.AcquireWriter(qq422016)
//line forms.html:100
	streamarrayItemForm(qw422016, v)
//line forms.html:100
	qt422016.ReleaseWriter(qw422016)
//line forms.html:100
}

//line forms.html:100
func arrayItemForm(v string) string {
//line forms.html:100
	qb422016 := qt422016.AcquireByteBuffer()
//line forms.html:100
	writearrayItemForm(qb422016, v)
//line forms.html:100
	qs422016 := string(qb422016.B)
//line forms.html:100
	qt422016.ReleaseByteBuffer(qb422016)
//line forms.html:100
	return qs422016
//line forms.html:100
}

// Form formatted as a table, with cancel and submit buttons

//line forms.html:103
func streamtableForm(qw422016 *qt422016.Writer, specs []inputSpec, needCaptcha bool) {
//line forms.html:104
	streamtable(qw422016, specs)
//line forms.html:105
	if needCaptcha {
//line forms.html:106
		streamcaptcha(qw422016, "all")
//line forms.html:107
	}
//line forms.html:108
	streamsubmit(qw422016, true)
//line forms.html:109
}

//line forms.html:109
func writetableForm(qq422016 qtio422016.Writer, specs []inputSpec, needCaptcha bool) {
//line forms.html:109
	qw422016 := qt422016.AcquireWriter(qq422016)
//line forms.html:109
	streamtableForm(qw422016, specs, needCaptcha)
//line forms.html:109
	qt422016.ReleaseWriter(qw422016)
//line forms.html:109
}

//line forms.html:109
func tableForm(specs []inputSpec, needCaptcha bool) string {
//line forms.html:109
	qb422016 := qt422016.AcquireByteBuffer()
//line forms.html:109
	writetableForm(qb422016, specs, needCaptcha)
//line forms.html:109
	qs422016 := string(qb422016.B)
//line forms.html:109
	qt422016.ReleaseByteBuffer(qb422016)
//line forms.html:109
	return qs422016
//line forms.html:109
}

// Render a map form for inputting map-like data

//line forms.html:112
func streamrenderMap(qw422016 *qt422016.Writer, spec inputSpec) {
//line forms.html:113
	ln := lang.Get()

//line forms.html:113
	qw422016.N().S(`<div class="map-form" name="`)
//line forms.html:114
	qw422016.N().S(spec.ID)
//line forms.html:114
	qw422016.N().S(`" title="`)
//line forms.html:114
	qw422016.N().S(ln.Forms[spec.ID][1])
//line forms.html:114
	qw422016.N().S(`">`)
//line forms.html:115
	for k, v := range spec.Val.(map[string]string) {
//line forms.html:116
		streamkeyValueForm(qw422016, k, v)
//line forms.html:117
	}
//line forms.html:117
	qw422016.N().S(`<a class="map-add">`)
//line forms.html:119
	qw422016.N().S(ln.UI["add"])
//line forms.html:119
	qw422016.N().S(`</a><br></div>`)
//line forms.html:123
}

//line forms.html:123
func writerenderMap(qq422016 qtio422016.Writer, spec inputSpec) {
//line forms.html:123
	qw422016 := qt422016.AcquireWriter(qq422016)
//line forms.html:123
	streamrenderMap(qw422016, spec)
//line forms.html:123
	qt422016.ReleaseWriter(qw422016)
//line forms.html:123
}

//line forms.html:123
func renderMap(spec inputSpec) string {
//line forms.html:123
	qb422016 := qt422016.AcquireByteBuffer()
//line forms.html:123
	writerenderMap(qb422016, spec)
//line forms.html:123
	qs422016 := string(qb422016.B)
//line forms.html:123
	qt422016.ReleaseByteBuffer(qb422016)
//line forms.html:123
	return qs422016
//line forms.html:123
}

// Render form for inputting array-like data

//line forms.html:126
func streamrenderArray(qw422016 *qt422016.Writer, spec inputSpec) {
//line forms.html:127
	ln := lang.Get()

//line forms.html:127
	qw422016.N().S(`<div class="array-form" name="`)
//line forms.html:128
	qw422016.N().S(spec.ID)
//line forms.html:128
	qw422016.N().S(`" title="`)
//line forms.html:128
	qw422016.N().S(ln.Forms[spec.ID][1])
//line forms.html:128
	qw422016.N().S(`">`)
//line forms.html:129
	for _, v := range spec.Val.([]string) {
//line forms.html:130
		streamarrayItemForm(qw422016, v)
//line forms.html:131
	}
//line forms.html:131
	qw422016.N().S(`<a class="array-add">`)
//line forms.html:133
	qw422016.N().S(ln.UI["add"])
//line forms.html:133
	qw422016.N().S(`</a><br></div>`)
//line forms.html:137
}

//line forms.html:137
func writerenderArray(qq422016 qtio422016.Writer, spec inputSpec) {
//line forms.html:137
	qw422016 := qt422016.AcquireWriter(qq422016)
//line forms.html:137
	streamrenderArray(qw422016, spec)
//line forms.html:137
	qt422016.ReleaseWriter(qw422016)
//line forms.html:137
}

//line forms.html:137
func renderArray(spec inputSpec) string {
//line forms.html:137
	qb422016 := qt422016.AcquireByteBuffer()
//line forms.html:137
	writerenderArray(qb422016, spec)
//line forms.html:137
	qs422016 := string(qb422016.B)
//line forms.html:137
	qt422016.ReleaseByteBuffer(qb422016)
//line forms.html:137
	return qs422016
//line forms.html:137
}

// Render submit and cancel buttons

//line forms.html:140
func streamsubmit(qw422016 *qt422016.Writer, cancel bool) {
//line forms.html:140
	qw422016.N().S(`<input type="submit" value="`)
//line forms.html:141
	qw422016.N().S(lang.Get().Common.UI["submit"])
//line forms.html:141
	qw422016.N().S(`">`)
//line forms.html:142
	if cancel {
//line forms.html:143
		streamcancel(qw422016)
//line forms.html:144
	}
//line forms.html:144
	qw422016.N().S(`<div class="form-response admin"></div>`)
//line forms.html:146
}

//line forms.html:146
func writesubmit(qq422016 qtio422016.Writer, cancel bool) {
//line forms.html:146
	qw422016 := qt422016.AcquireWriter(qq422016)
//line forms.html:146
	streamsubmit(qw422016, cancel)
//line forms.html:146
	qt422016.ReleaseWriter(qw422016)
//line forms.html:146
}

//line forms.html:146
func submit(cancel bool) string {
//line forms.html:146
	qb422016 := qt422016.AcquireByteBuffer()
//line forms.html:146
	writesubmit(qb422016, cancel)
//line forms.html:146
	qs422016 := string(qb422016.B)
//line forms.html:146
	qt422016.ReleaseByteBuffer(qb422016)
//line forms.html:146
	return qs422016
//line forms.html:146
}

// Renders a cancel button

//line forms.html:149
func streamcancel(qw422016 *qt422016.Writer) {
//line forms.html:149
	qw422016.N().S(`<input type="button" name="cancel" value="`)
//line forms.html:150
	qw422016.N().S(lang.Get().Common.UI["cancel"])
//line forms.html:150
	qw422016.N().S(`">`)
//line forms.html:151
}

//line forms.html:151
func writecancel(qq422016 qtio422016.Writer) {
//line forms.html:151
	qw422016 := qt422016.AcquireWriter(qq422016)
//line forms.html:151
	streamcancel(qw422016)
//line forms.html:151
	qt422016.ReleaseWriter(qw422016)
//line forms.html:151
}

//line forms.html:151
func cancel() string {
//line forms.html:151
	qb422016 := qt422016.AcquireByteBuffer()
//line forms.html:151
	writecancel(qb422016)
//line forms.html:151
	qs422016 := string(qb422016.B)
//line forms.html:151
	qt422016.ReleaseByteBuffer(qb422016)
//line forms.html:151
	return qs422016
//line forms.html:151
}

// Render link to request new noscript captcha

//line forms.html:154
func StreamNoscriptCaptchaLink(qw422016 *qt422016.Writer, board string) {
//line forms.html:154
	qw422016.N().S(`<a href="/api/captcha/`)
//line forms.html:155
	qw422016.E().S(board)
//line forms.html:155
	qw422016.N().S(`" style="display: flex; width: 100%; height: 100%;"><span style="align-self: center; margin: auto;">`)
//line forms.html:157
	qw422016.N().S(lang.Get().UI["loadCaptcha"])
//line forms.html:157
	qw422016.N().S(`</span></a>`)
//line forms.html:160
}

//line forms.html:160
func WriteNoscriptCaptchaLink(qq422016 qtio422016.Writer, board string) {
//line forms.html:160
	qw422016 := qt422016.AcquireWriter(qq422016)
//line forms.html:160
	StreamNoscriptCaptchaLink(qw422016, board)
//line forms.html:160
	qt422016.ReleaseWriter(qw422016)
//line forms.html:160
}

//line forms.html:160
func NoscriptCaptchaLink(board string) string {
//line forms.html:160
	qb422016 := qt422016.AcquireByteBuffer()
//line forms.html:160
	WriteNoscriptCaptchaLink(qb422016, board)
//line forms.html:160
	qs422016 := string(qb422016.B)
//line forms.html:160
	qt422016.ReleaseByteBuffer(qb422016)
//line forms.html:160
	return qs422016
//line forms.html:160
}

//line forms.html:162
func StreamBannerForm(qw422016 *qt422016.Writer) {
//line forms.html:162
	qw422016.N().S(`<div style="white-space: normal;">`)
//line forms.html:164
	qw422016.N().S(lang.Get().UI["bannerSpecs"])
//line forms.html:164
	qw422016.N().S(`</div><br><input type="file" name="banners" multiple accept="image/png, image/gif, image/jpeg, video/webm"><br>`)
//line forms.html:169
	streamcaptcha(qw422016, "all")
//line forms.html:170
	streamsubmit(qw422016, true)
//line forms.html:171
}

//line forms.html:171
func WriteBannerForm(qq422016 qtio422016.Writer) {
//line forms.html:171
	qw422016 := qt422016.AcquireWriter(qq422016)
//line forms.html:171
	StreamBannerForm(qw422016)
//line forms.html:171
	qt422016.ReleaseWriter(qw422016)
//line forms.html:171
}

//line forms.html:171
func BannerForm() string {
//line forms.html:171
	qb422016 := qt422016.AcquireByteBuffer()
//line forms.html:171
	WriteBannerForm(qb422016)
//line forms.html:171
	qs422016 := string(qb422016.B)
//line forms.html:171
	qt422016.ReleaseByteBuffer(qb422016)
//line forms.html:171
	return qs422016
//line forms.html:171
}

//line forms.html:173
func StreamLoadingAnimationForm(qw422016 *qt422016.Writer) {
//line forms.html:173
	qw422016.N().S(`<div style="white-space: normal;">`)
//line forms.html:175
	qw422016.N().S(lang.Get().UI["loadingSpecs"])
//line forms.html:175
	qw422016.N().S(`</div><br><input type="file" name="image" accept="image/gif, video/webm"><br>`)
//line forms.html:180
	streamcaptcha(qw422016, "all")
//line forms.html:181
	streamsubmit(qw422016, true)
//line forms.html:182
}

//line forms.html:182
func WriteLoadingAnimationForm(qq422016 qtio422016.Writer) {
//line forms.html:182
	qw422016 := qt422016.AcquireWriter(qq422016)
//line forms.html:182
	StreamLoadingAnimationForm(qw422016)
//line forms.html:182
	qt422016.ReleaseWriter(qw422016)
//line forms.html:182
}

//line forms.html:182
func LoadingAnimationForm() string {
//line forms.html:182
	qb422016 := qt422016.AcquireByteBuffer()
//line forms.html:182
	WriteLoadingAnimationForm(qb422016)
//line forms.html:182
	qs422016 := string(qb422016.B)
//line forms.html:182
	qt422016.ReleaseByteBuffer(qb422016)
//line forms.html:182
	return qs422016
//line forms.html:182
}
